import"rxjs";import{renderTypeSwitch as e}from"../utils/check-type.min.js";import"rxjs/operators";import{unsubscribe as i}from"../utils/observable.min.js";import{replaceChildOnIndexPosition as r,renderChildInIndexPosition as t}from"../dom-renderer.min.js";import{removeExistingFragment as s}from"./utils.min.js";const m=(e,i,r,s,m,o,l)=>{t(t=>{l.add(m,{...t,key:e.key,subscription:i.child.subscription}),s.fragmentChildKeys={...s.fragmentChildKeys,[e.key]:m},delete r[e.key]},i.child.element,m,o,l)},o=(t,o,l,n,y,d,p)=>e(e=>{r(r=>{e.key&&l[e.key]||i(e),p.replace(y,{...r,key:t.key,subscription:o.child.subscription}),n.fragmentChildKeys={...n.fragmentChildKeys,[t.key]:y},delete l[t.key]},o.child.element,y,d,p)},e=>{s(l,y,d,p)(e),m(t,o,l,n,y,d,p)},()=>m(t,o,l,n,y,d,p))(y,p);export{o as elementMoveCallback};
