import"rxjs";import{appendChild as e,insertBefore as t,replaceChild as n,removeChild as i}from"./utils/dom.min.js";import"rxjs/operators";function s(n,i,s,r,o){if(o.empty())e(r,i);else if(o.hasOneChild()){const n=o.getFirstIndex();if(parseInt(s)>parseInt(n))e(r,i);else{const e=o.getFirstChild();t(r,i,e.element)}}else{const{isFirst:n,isLast:l,nextSibling:m,firstChild:f}=o.getPositionInfoForNewChild(s);n?t(r,i,f.element):l?e(r,i):t(r,i,m.element)}return n({index:s,element:i})}function r(e,t,i,s,r){const o=r.get(i);if(n(s,t,o.element))return e({index:i,element:t})}function o(e,t,n,s){const r=s.get(t);if(i(n,r.element))return e(r)}export{o as removeChildFromIndexPosition,s as renderChildInIndexPosition,r as replaceChildOnIndexPosition};
