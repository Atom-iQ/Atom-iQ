import{Subscription as r,isObservable as n}from"rxjs";import{childTypeSwitch as o,isSvgElement as t,renderTypeSwitch as e}from"./utils/check-type.min.js";import{createDomElement as m}from"./utils/dom.min.js";import"rxjs/operators";import{connectElementProps as i}from"./element-props.min.js";import s from"./utils/children-manager.min.js";import{staticTextRenderCallback as c,textRenderCallback as l}from"./render-callback/text.min.js";import p from"./render-callback/null.min.js";import{renderElement as f,replaceFragmentForElement as a,replaceElementForElement as d}from"./render-callback/element.min.js";import{staticFragmentRenderCallback as u,staticArrayRenderCallback as j,arrayRenderCallback as b,fragmentRenderCallback as h}from"./render-callback/fragment.min.js";import{renderRvdComponent as k}from"./component.min.js";const g=(r,n,o)=>(t,e)=>w(e,r,n,o)(t),x=(...r)=>{const[n,t,e,m]=r;return o(null,c(...r),j(n,t,e,m,g(t,e,m)),k(n,t,e,m,g(t,e,m)),u(n,t,e,m,g(t,e,m)),((r,n,o,t)=>e=>{const m=S(e);f(m,r,n,o,t)()})(...r))},w=(...r)=>{const[n,t,m,i]=r;return o(p(...r),l(...r),b(n,t,m,i,g(t,m,i)),k(n,t,m,i,g(t,m,i)),h(n,t,m,i,g(t,m,i)),((r,n,o,t)=>m=>{const i=S(m),s=f(i,r,n,o,t);e(d(i,r,n,o,t),a(s,i,r,n,o),s)(r,o)})(...r))},y=(o,t)=>{const e=new r,m=s();return o.forEach(((r,o,t)=>(e,m)=>{const i=String(m);if(n(e)){const n=e.subscribe(w(i,r,o,t));t.add(n)}else x(i,r,o,t)(e)})(t,m,e)),e};function S(r){const n=m(r.type,t(r)),o=i(r,n);if(r.children){const t=y(r.children,n);o.add(t)}return{dom:n,elementSubscription:o}}function C(n,o){console.log("rootChild");const t=new r,e=s();return x("0",o,e,t)(n),t}export{C as renderRootChild};
