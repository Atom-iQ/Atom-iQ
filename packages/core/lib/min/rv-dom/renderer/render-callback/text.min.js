import"rxjs";import{renderTypeSwitch as r}from"../utils/check-type.min.js";import{createTextNode as m}from"../utils/dom.min.js";import"rxjs/operators";import{unsubscribe as o}from"../utils/observable.min.js";import{renderChildInIndexPosition as i,removeChildFromIndexPosition as t,replaceChildOnIndexPosition as e}from"../dom-renderer.min.js";import{getSortedFragmentChildIndexes as s}from"../utils/children-manager.min.js";const n=(n,p,a)=>d=>{const c=()=>{i(r=>a.add(n,r),m(String(d)),n,p,a)};r(r=>{e(m=>{o(r),a.replace(n,m)},m(String(d)),n,p,a)},r=>{s(r).forEach(r=>{t(m=>{o(m),a.remove(r)},r,p,a)}),o(r),a.removeFragment(n),c()},c)(n,a)},p=(r,o,t)=>e=>{i(m=>t.add(r,m),m(String(e)),r,o,t)};export{p as staticTextRenderCallback,n as textRenderCallback};
